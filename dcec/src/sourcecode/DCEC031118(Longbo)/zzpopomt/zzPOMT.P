/* GUI CONVERTED from pomt.p (converter v1.69) Wed May 21 20:51:47 1997 */
/* pomt.p - PURCHASE ORDER MAINTENANCE                                      */
/* COPYRIGHT qad.inc. ALL RIGHTS RESERVED. THIS IS AN UNPUBLISHED WORK.     */
/*F0PN*/ /*V8:ConvertMode=Maintenance                                       */
/*       -  CHANGED TO MAINTAIN BOTH BLANKET AND REGULAR PO's */
/* REVISION: 1.0     LAST MODIFIED: 08/30/86    BY: PML *14*  */
/* REVISION: 1.0     LAST MODIFIED: 02/11/86    BY: EMB       */
/* REVISION: 2.0     LAST MODIFIED: 12/19/86    BY: PML *A3*  */
/* REVISION: 2.0     LAST MODIFIED: 03/12/87    BY: EMB *A41* */
/* REVISION: 4.0     LAST MODIFIED: 03/10/88    BY: FLM *A108**/
/* REVISION: 4.0     LAST MODIFIED: 12/27/87    BY: PML *A119**/
/* REVISION: 4.0     LAST MODIFIED: 01/14/88    BY: WUG *A145**/
/* REVISION: 4.0     LAST MODIFIED: 07/26/88    BY: RL  *C0028*/
/* REVISION: 4.0     LAST MODIFIED: 10/25/88    BY: WUG *A494**/
/* REVISION: 4.0     LAST MODIFIED: 12/13/88    BY: MLB *A560**/
/* REVISION: 4.0     LAST MODIFIED: 02/27/89    BY: WUG *B038**/
/* REVISION: 4.0     LAST MODIFIED: 03/16/89    BY: MLB *A673**/
/* REVISION: 4.0     LAST MODIFIED: 03/24/89    BY: FLM *A685**/
/* REVISION: 4.0     LAST MODIFIED: 04/11/89    BY: FLM *A708**/
/* REVISION: 5.0     LAST MODIFIED: 05/16/89    BY: MLB *B118**/
/* REVISION: 5.0     LAST MODIFIED: 12/21/89    BY: FTB *B466**/
/* REVISION: 5.0     LAST MODIFIED: 02/27/90    BY: EMB *B591**/
/* REVISION: 6.0     LAST MODIFIED: 03/21/90    BY: FTB *D011**/
/* REVISION: 6.0     LAST MODIFIED: 03/22/90    BY: FTB *D013**/
/* REVISION: 6.0     LAST MODIFIED: 05/21/90    BY: WUG *D002**/
/* REVISION: 5.0     LAST MODIFIED: 06/11/90    BY: RAM *B706**/
/* REVISION: 6.0     LAST MODIFIED: 06/20/90    BY: RAM *D030**/
/* REVISION: 6.0     LAST MODIFIED: 06/29/90    BY: WUG *D043**/
/* REVISION: 6.0     LAST MODIFIED: 07/06/90    BY: EMB *D040**/
/* REVISION: 6.0     LAST MODIFIED: 08/13/90    BY: SVG *D058**/
/* REVISION: 6.0     LAST MODIFIED: 10/18/90    BY: PML *D109**/
/* REVISION: 6.0     LAST MODIFIED: 10/24/90    BY: RAM *D135**/
/* REVISION: 6.0     LAST MODIFIED: 10/27/90    BY: pml *D146**/
/* REVISION: 6.0     LAST MODIFIED: 11/13/90    BY: pml *D221**/
/* REVISION: 6.0     LAST MODIFIED: 01/02/91    BY: dld *D259**/
/* REVISION: 6.0     LAST MODIFIED: 01/02/91    BY: MLB *D238**/
/* REVISION: 6.0     LAST MODIFIED: 01/21/91    BY: dld *D311**/
/* REVISION: 6.0     LAST MODIFIED: 02/11/91    BY: RAM *D345**/
/* REVISION: 6.0     LAST MODIFIED: 03/07/91    BY: dld *D409**/
/* REVISION: 6.0     LAST MODIFIED: 03/08/91    BY: RAM *D410**/
/* REVISION: 6.0     LAST MODIFIED: 04/08/91    BY: RAM *D502**/
/* REVISION: 6.0     LAST MODIFIED: 04/11/91    BY: RAM *D518**/
/* REVISION: 6.0     LAST MODIFIED: 05/07/91    BY: RAM *D621**/
/* REVISION: 6.0     LAST MODIFIED: 05/09/91    BY: RAM *D634**/
/* REVISION: 6.0     LAST MODIFIED: 08/15/91    BY: pma *D829**/ /*rev only*/
/* REVISION: 7.0     LAST MODIFIED: 09/12/91    BY: RAM *F033**/
/* REVISION: 6.0     LAST MODIFIED: 09/24/91    BY: RAM *D872**/
/* REVISION: 6.0     LAST MODIFIED: 10/10/91    BY: dgh *D892**/
/* REVISION: 7.0     LAST MODIFIED: 11/08/91    BY: MLV *F029**/
/* REVISION: 6.0     LAST MODIFIED: 11/11/91    BY: RAM *D921**/
/* REVISION: 7.0     LAST MODIFIED: 02/04/92    BY: RAM *F163**/
/* REVISION: 7.0     LAST MODIFIED: 06/19/92    BY: tmd *F458**/
/* REVISION: 7.0     LAST MODIFIED: 07/01/92    BY: afs *F727**/
/* REVISION: 7.0     LAST MODIFIED: 07/31/92    BY: afs *F827*   (rev only) */
/* REVISION: 7.3     LAST MODIFIED: 08/05/92    BY: tjs *G027**/
/* REVISION: 7.3     LAST MODIFIED: 08/18/92    BY: tjs *G028*   (rev only) */
/* REVISION: 7.3     LAST MODIFIED: 10/01/92    BY: tjs *G117**/
/* REVISION: 7.3     LAST MODIFIED: 10/08/92    BY: tjs *G143*   (rev only) */
/* REVISION: 7.3     LAST MODIFIED: 10/12/92    BY: tjs *G164*   (rev only) */
/* REVISION: 7.3     LAST MODIFIED: 12/18/92    BY: afs *G465*   (rev only) */
/* REVISION: 7.3     LAST MODIFIED: 01/05/93    BY: mpp *G481*   (rev only) */
/* REVISION: 7.3     LAST MODIFIED: 01/06/93    BY: bcm *G417**/
/* REVISION: 7.3     LAST MODIFIED: 02/11/93    BY: afs *G674**/
/* REVISION: 7.3     LAST MODIFIED: 02/17/93    BY: tjs *G684*   (rev only) */
/* REVISION: 7.3     LAST MODIFIED: 02/21/93    BY: afs *G716**/
/* REVISION: 7.3     LAST MODIFIED: 02/22/93    BY: bcm *G717*   (rev only) */
/* REVISION: 7.3     LAST MODIFIED: 02/23/93    BY: tjs *G728*   (rev only) */
/* REVISION: 7.3     LAST MODIFIED: 02/23/93    BY: tjs *G735**/
/* REVISION: 7.3     LAST MODIFIED: 03/15/93    BY: tjs *G810**/
/* REVISION: 7.3     LAST MODIFIED: 03/16/93    BY: tjs *G815*   (rev only) */
/* REVISION: 7.3     LAST MODIFIED: 04/09/93    BY: pma *G928*   (rev only) */
/* REVISION: 7.3     LAST MODIFIED: 04/19/93    BY: tjs *G964**/
/* REVISION: 7.3     LAST MODIFIED: 04/29/93    BY: afs *G972*   (rev only) */
/* REVISION: 7.3     LAST MODIFIED: 05/26/93    BY: kgs *GB37*   (rev only) */
/* REVISION: 7.4     LAST MODIFIED: 06/07/93    BY: jjs *H006*              */
/* REVISION: 7.4     LAST MODIFIED: 07/02/93    BY: dpm *H015*   (rev only) */
/* REVISION: 7.4     LAST MODIFIED: 07/02/93    BY: dpm *H017*   (rev only) */
/* REVISION: 7.4     LAST MODIFIED: 07/02/93    BY: dpm *H018*   (rev only) */
/* REVISION: 7.4     LAST MODIFIED: 07/02/93    BY: jjs *H024*   (rev only) */
/* REVISION: 7.4     LAST MODIFIED: 07/21/93    BY: dpm *H034*   (rev only) */
/* REVISION: 7.4     LAST MODIFIED: 07/30/93    BY: cdt *H047*   (rev only) */
/* REVISION: 7.4     LAST MODIFIED: 08/09/93    BY: bcm *H062*   (rev only) */
/* REVISION: 7.4     LAST MODIFIED: 08/12/93    BY: tjs *H065*   (rev only) */
/* REVISION: 7.4     LAST MODIFIED: 09/07/93    BY: tjs *H082**/
/* REVISION: 7.4     LAST MODIFIED: 09/29/93    BY: cdt *H086**/
/* REVISION: 7.4     LAST MODIFIED: 10/28/93    BY: dpm *H198*   (rev only) */
/* REVISION: 7.4     LAST MODIFIED: 10/23/93    BY: cdt *H184**/
/* REVISION: 7.4     LAST MODIFIED: 11/14/93    BY: afs *H221**/
/* REVISION: 7.4     LAST MODIFIED: 02/10/94    BY: dpm *FM06**/
/* REVISION: 7.4     LAST MODIFIED: 04/19/94    BY: WUG *FN46**/
/* REVISION: 7.4     LAST MODIFIED: 05/23/94    BY: afs *FM85**/
/* REVISION: 7.4     LAST MODIFIED: 05/27/94    BY: afs *FO49**/
/* REVISION: 7.4     LAST MODIFIED: 06/17/94    BY: qzl *H392**/
/* REVISION: 7.4     LAST MODIFIED: 06/21/94    BY: qzl *H397**/
/* REVISION: 7.4     LAST MODIFIED: 09/11/94    BY: rmh *GM16**/
/* REVISION: 7.4     LAST MODIFIED: 09/20/94    BY: ljm *GM74**/
/* REVISION: 7.4     LAST MODIFIED: 10/27/94    BY: cdt *FS95**/
/* REVISION: 7.4     LAST MODIFIED: 11/06/94    BY: rwl *GO27**/
/* REVISION: 8.5     LAST MODIFIED: 11/10/94    BY: mwd *J034**/
/* REVISION: 8.5     LAST MODIFIED: 02/21/95    BY: dpm *J044**/
/* REVISION: 7.4     LAST MODIFIED: 05/03/95    BY: dxk *G0L7**/
/* REVISION: 7.4     LAST MODIFIED: 08/16/95    BY: jym *G0V4**/
/* REVISION: 7.4     LAST MODIFIED: 08/25/95    BY: ais *G0VN**/
/* REVISION: 7.4     LAST MODIFIED: 09/19/95    BY: ais *G0X6**/
/* REVISION: 8.5     LAST MODIFIED: 01/15/95    BY: kxn *J0BS**/
/* REVISION: 8.5     LAST MODIFIED: 09/27/95    BY: taf *J053**/
/* REVISION: 8.5     LAST MODIFIED: 03/19/96    BY: *J0CV* Robert Wachowicz*/
/* REVISION: 8.5     LAST MODIFIED: 04/09/96    BY: *J0HQ* Gary Morales    */
/* REVISION: 8.5     LAST MODIFIED: 05/15/96    BY: *J0LX* Kieu Nguyen     */
/* REVISION: 8.5     LAST MODIFIED: 07/19/96    BY: *J0ZS* T. Farnsworth   */
/* REVISION: 8.5     LAST MODIFIED: 08/16/96    BY: *J146* Sue Poland      */
/* REVISION: 8.5     LAST MODIFIED: 12/18/96    BY: *J1CJ* Sue Poland      */
/* REVISION: 8.5     LAST MODIFIED: 01/09/97    BY: *J1B1* Robin McCarthy  */
/* REVISION: 8.5     LAST MODIFIED: 05/16/97    BY: *J1RQ* Suresh Nayak    */
/* REVISION: 8.5     LAST MODIFIED: 11/14/03    BY: *LB01* Long Bo         */

	 /* DISPLAY TITLE */
	 {mfdtitle.i "e+ "}

/*J053*/ define new shared variable rndmthd like rnd_rnd_mthd.
/*J053*/ define new shared variable oldcurr like po_curr.
	 define new shared variable line like pod_line.
	 define new shared variable due_date like pod_due_date.
	 define new shared variable del-yn like mfc_logical.
	 define new shared variable qty_ord like pod_qty_ord.
	 define new shared variable so_job like pod_so_job.
	 define new shared variable sngl_ln like poc_ln_fmt.
	 define new shared variable disc like pod_disc label "每项折扣".
	 define new shared variable po_recno as recid.
	 define new shared variable vd_recno as recid.
	 define new shared variable yn like mfc_logical initial yes.
	 define new shared variable ponbr like po_nbr.
	 define new shared variable old_po_stat like po_stat.
/*G0X6*/ define new shared variable line_opened like mfc_logical.
	 define new shared variable old_rev like po_rev.
	 define variable old_vend like po_vend.
	 define variable old_ship like po_ship.
	 define new shared variable pocmmts like mfc_logical label "说明".
	 define new shared variable cmtindx as integer.
	 define new shared variable base_amt like pod_pur_cost.
	 define new shared variable comment_type like po_lang.
	 define new shared variable new_po like mfc_logical.
	 define shared variable blanket like mfc_logical.
/*F033*/ define new shared variable new_db like si_db.
/*F033*/ define new shared variable old_db like si_db.
/*F033*/ define new shared variable new_site like si_site.
/*F033*/ define new shared variable old_site like si_site.
	 define new shared variable continue like mfc_logical no-undo.
/*H006*/ define new shared variable tax_in like ad_tax_in.
	 define new shared frame a.
	 define new shared frame b.
	 define new shared frame vend.
	 define new shared frame ship_to.
/*J053 /*F458*/ define variable tax_date like tax_effdate.  NOW IN POTRLDEF.I */
/*F458*/ define new shared variable tax_recno as recid.
/*G417*/ define variable zone_to    like txe_zone_to.
/*G417*/ define variable zone_from  like txe_zone_from.
/*H006   define variable tax_env    like txe_tax_env no-undo. */
/*H086*/ define new shared variable poc_pc_line like mfc_logical initial yes.
/*H184*/ define new shared variable pocrt_int like pod_crt_int.
/*J044*/ define new shared variable impexp      like mfc_logical no-undo.
/*J044*/ define            variable impexp_edit like mfc_logical no-undo.
/*J044*/ define            variable upd_okay    like mfc_logical no-undo.

/*H006   find first gl_ctrl no-lock. */
/*F033*/ old_db = global_db.

/*J053      DEFINE & INITIALIZE CURRENCY DEPENDENT ROUNDING FORMAT VARS  */
/*J053*/    {pocurvar.i "NEW"}
/*J053*/    {txcurvar.i "NEW"}
/*J053*/
/*J053*/    /* DEFINE TRAILER VARS AS NEW, SO THAT CORRECT _OLD FORMATS */
/*J053*/    /* CAN BE ASSIGNED BASED ON INITIAL DEFINE                  */
/*J053*/    {potrldef.i "NEW"}
/*J1CJ*/    run initialize-variables.
/*J1CJ*     MOVED THIS TO A SEPARATE INTERNAL PROCEDURE...
./*J053*/    assign
./*J053*/            nontax_old         = nontaxable_amt:format
./*J053*/            taxable_old        = taxable_amt:format
./*J053*/            lines_tot_old      = lines_total:format
./*J053*/            tax_tot_old        = tax_total:format
./*J053*/            order_amt_old      = order_amt:format
./*J053*/            line_tax_old       = line_tax:format
./*J053*/            line_tot_old       = line_total:format
./*J053*/            tax_old            = tax_2:format
./*J053*/            tax_amt_old        = tax_amt:format
./*J053*/            ord_amt_old        = ord_amt:format
./*J053*/            vtord_amt_old      = vtord_amt:format
./*J053*/            line_pst_old       = line_pst:format
./*J053*/            prepaid_old        = po_prepaid:format
./*J053*/            frt_old            = po_frt:format
./*J053*/            spec_chg_old       = po_spec_chg:format
./*J053*/            serv_chg_old       = po_serv_chg:format.
./*J053*/    oldcurr = "".
.
./*H086*/ do transaction on error undo, retry:
./*H086*/    /* SET UP PRICING BY LINE VALUES */
./*H086*/    find first mfc_ctrl where mfc_field = "poc_pc_line"
./*H086*/    no-lock no-error.
./*H086*/    if available mfc_ctrl then do:
./*H086*/       poc_pc_line = mfc_logical.
./*H086*/    end.
./*H086*/ end.
.*J1CJ*/
	 mainloop:
	 repeat:
/*GUI*/ if global-beam-me-up then undo, leave.


	    do transaction on error undo, retry:
/*GUI*/ if global-beam-me-up then undo, leave.

/*J146* /*J053*/       hide all no-pause.   */
/*H006*/       find first gl_ctrl no-lock.

	       assign
	       so_job = ""
	       disc = 0
	       comment_type = global_type.

/*H082*/       {popomt02.i}  /* Shared frames a and b */

	       {mfadform.i "vend" 1 " 供应商 "}
	       {mfadform.i "ship_to" 41 " 货物发往 "}

	       /*GUI: view frame dtitle. */
IF global-tool-bar AND global-tool-bar-handle <> ? THEN
  view global-tool-bar-handle. /*GUI*/

	       view frame a.
	       view frame vend.
	       view frame ship_to.
	       view frame b.

	       prompt-for po_nbr with frame a editing:

/*G716*/          /* Allow last PO number refresh */
/*G716*/          if keyfunction(lastkey) = "RECALL" or lastkey = 307
/*G716*/           then display ponbr @ po_nbr with frame a.

		  /* FIND NEXT/PREVIOUS  RECORD */
		  if blanket = false then do:
/*FS95*/             /* Do not scroll thru RTS for PO or PO for RTS */
/*FS95*/             /* {mfnp06.i po_mstr po_nbr "po_type <> ""B""" */
/*FS95*/             /* po_nbr  "input po_nbr" yes yes }            */
/*FS95*/             {mfnp06.i
			 po_mstr
			 po_nbr
			 "po_type <> ""B"" and po_fsm_type = """""
			 po_nbr
			 "input po_nbr"
			 yes
			 yes }

		  end.
		  else do:
		     {mfnp01.i po_mstr po_nbr po_nbr po_type ""B"" po_type}
		  end.
		  if recno <> ? then do:
/*G117*/             disc = po_disc_pct.

/*H392*/             find ct_mstr where ct_code = po_cr_term no-lock no-error.
/*H392*/             if available ct_mstr then pocrt_int = ct_terms_int.
/*H392*/             else pocrt_int = 0.

		     {mfaddisp.i po_vend vend}
		     {mfaddisp.i po_ship ship_to}
		     display po_nbr po_vend po_ship with frame a.

/*H086*/             {popomtdi.i}  /* display new frame b. */
		  end.  /* IF RECNO <> ? */
	       end. /* PROMPT-FOR...EDITING */

/*FS95*/       find po_mstr where po_nbr = input po_nbr no-lock no-error.
/*FS95*/       if available po_mstr then do:
/*FS95*/          if po_fsm_type <> "" then do:
/*FS95*/             /* Can not process RTS orders with PO programs. */
/*FS95*/             {mfmsg.i 7364 3}
/*FS95*/             next-prompt po_nbr with frame a.
/*FS95*/             undo, retry.
/*FS95*/          end.

/*LB01*/	  	  if global_userid <> po_user_id then do:
/*LB01*/			 /* Can not process orders which created by other users*/																	
/*LB01               {mfmsg.i 7364 3}*/
/*LB01*/			 message "该订单由别的用户创建，您不能修改，请重新输入！" VIEW-AS ALERT-BOX ERROR BUTTONS OK.
/*LB01*/             next-prompt po_nbr with frame a.
/*LB01*/             undo, retry.
/*LB01*/		  end.
/*FS95*/       end.

	       if input po_nbr <> "" then ponbr = input po_nbr.
	       if input po_nbr = "" then do:
/*F163            {mfnctrl.i poc_ctrl poc_po_nbr po_mstr po_nbr ponbr} */
/*F163*/          {mfnctrlc.i
		     poc_ctrl
		     poc_po_pre
		     poc_po_nbr
		     po_mstr
		     po_nbr
		     ponbr
		  }
	       end.
	    end.
/*GUI*/ if global-beam-me-up then undo, leave.
  /* TRANSACTION  TO GET PO_NBR */

	    do transaction on error undo, retry:
/*GUI*/ if global-beam-me-up then undo, leave.

	       find first poc_ctrl no-lock.
	       if not available poc_ctrl then create poc_ctrl.
	       sngl_ln = poc_ln_fmt.
	       pocmmts = poc_hcmmts.
	       find po_mstr where po_nbr = ponbr exclusive-lock no-error.
	       if not available po_mstr then do:
		  clear frame vend.
/*GUI*/ RECT-FRAME-LABEL:SCREEN-VALUE in frame vend = F-vend-title.
		  clear frame ship_to.
/*GUI*/ RECT-FRAME-LABEL:SCREEN-VALUE in frame ship_to = F-ship_to-title.
		  clear frame b.
/*GUI*/ RECT-FRAME-LABEL:SCREEN-VALUE in frame b = F-b-title.
		  {mfmsg.i 1 1}
		  new_po = yes.
		  create po_mstr.
/*J1CJ*/          run initialize-po-mstr.
/*J1CJ*           MOVED THE FOLLOWING TO A SEPARATE PROCEDURE		
.		  assign
./*J0CV*/          po_ers_opt = "1"
.		  po_nbr = ponbr
.		  po_ord_date = today
./*G117*/          po_due_date = today
./*FO49**          po_tax_date = today **/
./*FO49*/          po_tax_date = ?
.		  po_ship = poc_ship
.		  po_bill = poc_bill
.		  po_confirm = yes
./*G117*/          disc = 0
.		  po_user_id = global_userid
.		  po_fst_id = poc_fst_id /*(GST exempt id for company)*/
.		  po_pst_id = poc_pst_id.
./*GM16*          recno = recid(po_mstr).       */
./*GO27*/          if recid(po_mstr) = -1 then .
.		  if blanket = true then
.		     assign
.		     po_blanket = ponbr
.		     po_rel_nbr = 0
.		     po_type = "B"
./*G117*/             po_due_date = ?
./*FO49**             po_tax_date = ? **/
.		     po_eff_strt = today.
.*J1CJ*/		
	       end.  /* IF NOT AVAILABLE PO_MSTR */

	       else do:
		  /* I.E. IF PO_MSTR WAS AVAILABLE */
/*H392*/          find ct_mstr where ct_code = po_cr_term no-lock no-error.
/*H392*/          if available ct_mstr then pocrt_int = ct_terms_int.
/*H392*/          else pocrt_int = 0.

/*G964*/          if po_stat = "c" then do:
/*G964*/             {mfmsg.i 326 1}  /* Purchase Order Closed */
/*G964*/          end.
/*H221*/          if po_stat = "x" then do:
/*H221*/             {mfmsg.i 395 1}  /* Purchase Order Cancelled */
/*H221*/          end.

/*H221*/          find first pod_det where pod_nbr = po_nbr no-lock no-error.
/*H221*/          if available pod_det and pod_po_db <> global_db then do:
/*H221*/             {mfmsg03.i 2514 3 """采购单""" """" pod_po_db}
/*H221*/             /* PO is for database pod_po_db */
/*H221*/             undo mainloop, retry mainloop.
/*H221*/          end.

		  new_po = no.
		  {mfmsg.i 10 1}

		  {mfaddisp.i po_vend vend}
		  if not available ad_mstr then do:
		     hide message no-pause.
		     {mfmsg.i 2 2}
		     /* Code is not a valid vendor. */
		  end.

		  if po_type <> "B" and blanket then do:
		     {mfmsg.i 383 3}  /* THIS IS NOT A BLANKET ORDER */
		     undo mainloop, retry mainloop.
		  end.
		  if po_type = "B" and not blanket then do:
		     {mfmsg.i 385 3}  /* BLANKET ORDER NOT ALLOWED */
		     undo mainloop, retry mainloop.
		  end.

		  {mfaddisp.i po_ship ship_to}
/*G117*/          disc = po_disc_pct.

/*FN46*/          if po_sched then do:
/*FN46*/             {mfmsg.i 8210 2}
/*FN46*/          end.

/*G0VN*/          if available pod_det
/*G0VN*/          then so_job = pod_so_job.

/*J034*        end.  *** MOVED DOWN */
/*J0BS*/          {gprun.i ""gpsiver.p""
		    "(input po_site, input ?, output return_int)"}
/*GUI*/ if global-beam-me-up then undo, leave.

/*J0BS*/          if return_int = 0 then do:
/*J0BS*/             {mfmsg.i 725 3}  /* USER DOES NOT HAVE ACCESS TO SITE */

/*J0LX*/	     display po_nbr po_vend po_ship with frame a.
/*J0LX*/             {popomtdi.i}  /* display new frame b. */
/*J0LX*/             pause.
/*J0BS*/             undo mainloop, retry.
/*J0BS*/          end.
/*J0BS*/       end.  /* (IF PO_MSTR WAS AVAILABLE)  MOVED TO HERE FROM ABOVE */

		  assign
/*G117*              due_date = today.                   */
/*G117*           if po_type = "B" then due_date = ?. */
		  recno = recid(po_mstr).
		  if po_cmtindx <> 0 then pocmmts = yes.
		  display po_nbr po_vend po_ship with frame a.

/*H086*/          {popomtdi.i}  /* display new frame b. */

/*J0BS*  /*J034*/          {gprun.i ""gpsiver.p""                            */
/*J0BS*                    "(input po_site, input ?, output return_int)"}           */
/*J0BS*  /*J034*/          if return_int = 0 then do:                        */
/*J0BS*  /*J034*/             {mfmsg.i 725 3}                                */
			      /* USER DOES NOT HAVE ACCESS TO SITE */
/*J0BS*  /*J034*/             undo mainloop, retry.                          */
/*J0BS*  /*J034*/          end.                                              */
/*J0BS*  /*J034*/       end.  /* (IF PO_MSTR WAS AVAILABLE) */               */

	       assign
	       old_vend = po_vend
	       old_ship = po_ship.

/*G0L7*/       vendblk:
/*G0L7*/       do on error undo, retry:
/*GUI*/ if global-beam-me-up then undo, leave.

		  prompt-for po_mstr.po_vend with frame a editing:

		     /* FIND NEXT/PREVIOUS  RECORD */
		     {mfnp.i vd_mstr po_vend vd_addr po_vend vd_addr vd_addr}

		     if recno <> ? then do:
			po_vend = vd_addr.
			display po_vend with frame a.
/*FM85*/                find ad_mstr where ad_addr = vd_addr  no-lock.
			{mfaddisp.i po_vend vend}
		     end.
		  end.

/* COMMENTED OUT 10/27/90 -- MIGHT WANT TO RE-STORE ...
.              /* DO NOT ALLOW MOD TO VENDOR IF ANY RECEIPTS */
.              if not new_po and po_vend entered then do:
.                 find first tr_hist where tr_addr = old_vend and
.                 tr_nbr = po_nbr
.                 and tr_type = "RCT-PO"
.                 no-lock no-error.
.                 if available tr_hist then do:
.                    {mfmsg.i 3040 3} /*can't modify--tr_hist exists*/
.                    next-prompt po_vend.
.                    clear frame vend.
.                    undo, retry.
.                 end.
.              end.
..............................................................10/27/90 */

/*G0V4*/          /* DO NOT ALLOW MOD TO VENDOR IF ANY RECEIPTS */
/*G0V4*/          if (not new_po and po_vend <> old_vend) or
/*G0V4*/             (not new_po and po_vend entered) then do:
/*G0V4*/             find first tr_hist where tr_addr = old_vend and
/*G0V4*/             tr_nbr = po_nbr
/*G0V4*/             and tr_type = "RCT-PO"
/*G0V4*/             no-lock no-error.
/*G0V4*/             if available tr_hist then do:
/*G0V4*/                {mfmsg.i 7303 3} /*can't modify--tr_hist exists*/
/*G0V4*/                display old_vend @ po_vend with frame a.
/*G0V4*/                next-prompt po_vend.
/*G0V4*/                clear frame vend.
/*GUI*/ RECT-FRAME-LABEL:SCREEN-VALUE in frame vend = F-vend-title.
/*G0V4*/                undo, retry.
/*G0V4*/             end.
/*G0V4*/          end.

		  {mfaddisp.i "input po_vend" vend}

/*G0L7*/          if not new_po and input po_vend <> old_vend then do:
/*G0L7*/             if po_sched then do:
/*G0L7*/                /* Order Was Created By Scheduled Order */
/*G0L7*/                {mfmsg.i 8210 3}
/*G0L7*/                clear frame vend.
/*GUI*/ RECT-FRAME-LABEL:SCREEN-VALUE in frame vend = F-vend-title.
/*G0L7*/                display old_vend @ po_vend with frame a.
/*G0L7*/                undo, retry.
/*G0L7*/             end.
/*G0L7*/          end.
/*G0L7*/       end.
/*GUI*/ if global-beam-me-up then undo, leave.
 /* vendblk */

	       find vd_mstr where vd_addr = input po_vend no-lock no-error.
	       if not available ad_mstr or not available vd_mstr then do:
		  {mfmsg.i 2 3}
		  next-prompt po_vend with frame a.
		  undo, retry.
	       end.

/*H006*/       tax_in = ad_tax_in.

/*H397*/       if new_po then do:
/*H397*/          po_inv_mthd = ad_po_mthd.
/*H397*/          if po_inv_mthd = "n" or po_inv_mthd = "e" then do:
/*H397*/             po_print = no.
/*H397*/          end.
/*H397*/       end.

/*FM06*        if (not new_po) and (po_vend <> input po_vend) and */
/*FM06*/       if (not new_po) and (old_vend <> input po_vend) and
/*FM06*        (po_curr <> base_curr) */
/*FM06*/       (po_curr <> vd_curr)
	       then do:
/*FM06*           {mfmsg.i 82 3}   */
/*FM06*/          {mfmsg.i 6225 3}

		  next-prompt po_vend.
		  undo, retry.
	       end.

	       assign
	       po_vend = input po_vend
	       vd_recno = recid(vd_mstr).
/*G117*        po_taxable = vd_taxable. */

	       do on error undo, retry:
/*GUI*/ if global-beam-me-up then undo, leave.

		  prompt-for po_mstr.po_ship with frame a editing:

		     /* FIND NEXT/PREVIOUS  RECORD */
		     {mfnp.i ad_mstr po_ship ad_addr po_ship ad_addr ad_addr}

		     if recno <> ? then do:
			po_ship = ad_addr.
			display po_ship with frame a.
			{mfaddisp.i po_ship ship_to}
		     end.
		  end.

		  if input po_ship = "" then do:
		     {mfmsg.i 40 3}
		     undo, retry.
		  end.

		  assign po_ship = input po_ship.
		  {mfaddisp.i po_ship ship_to}

		  if not available ad_mstr then do:
		     {mfmsg.i 13 3}
		     next-prompt po_ship with frame a.
		     undo, retry.
		  end.
	       end.
/*GUI*/ if global-beam-me-up then undo, leave.


/*G735***** Moved to below gprun.i of popomtb.p (set po_due_date 1st) *******
	 *     if po_vend <> old_vend or po_ship <> old_ship then do:
	 *        /* USE SHIP-TO INFO FOR TAX RATE PERCENTAGES */
/*F458*/ *        if po_tax_date <> ? then tax_date = po_tax_date.
/*F458*/ *        else tax_date = due_date.
	 *
/*G417*/ *        if not {txnew.i} then do:
/*F458*/ *        /* REPLACED GPTAX.I WITH GPTAX.P DUE TO COMPILE SIZE LIMITS */
/*F458*  *          {gptax.i} */
/*F458*/ *          {gprun.i ""gptax.p"" "(input ad_state,
	 *                               input ad_county,
	 *                               input ad_city,
	 *                               input tax_date)"}
/*F458*/ *          find tax_mstr where recid(tax_mstr) =
/*F458*/ *                                  tax_recno no-lock no-error.
	 *          if available tax_mstr then
	 *
	 *              assign
	 *              po_tax_pct[1] = tax_tax_pct[1]
	 *              po_tax_pct[2] = tax_tax_pct[2]
	 *              po_tax_pct[3] = tax_tax_pct[3].
	 *
/*G417*/ *        end.
	 *
	 *     end.
 *G735******/
	       /* SET GLOBAL REFERENCE VARIABLE FOR COMMENTS TO VENDOR */
	       global_ref = po_vend.

	       po_recno = recid(po_mstr).
	       continue = no.
/*F727*/       del-yn = no.
/*LB01*/       {gprun.i ""zzpopomtb.p""}  
/*GUI*/ if global-beam-me-up then undo, leave.

/*J0HQ*/       if del-yn then next mainloop.
/*J0HQ*/       if continue = no then undo mainloop, retry.
/*J0CV ADDED BLOCK*/
	       find first poc_ctrl no-lock no-error.
	       if available poc_ctrl and poc_ers_proc then do: /*ERS ON*/
		  FORM /*GUI*/ 
		     
 RECT-FRAME       AT ROW 1 COLUMN 1.25
 RECT-FRAME-LABEL AT ROW 1 COLUMN 3 NO-LABEL VIEW-AS TEXT SIZE-PIXELS 1 BY 1
 SKIP(.1)  /*GUI*/
po_ers_opt label "收据估价选项" colon 22
		     skip
		     po_pr_lst_tp label "收据估价价格单选项" colon 22
		   SKIP(.4)  /*GUI*/
with frame ers overlay side-labels centered
		     row(frame-row(a) + 11)
/*J0LX*/	     width 30 NO-BOX THREE-D /*GUI*/.

 DEFINE VARIABLE F-ers-title AS CHARACTER INITIAL "".
 RECT-FRAME-LABEL:SCREEN-VALUE in frame ers = F-ers-title.
 RECT-FRAME-LABEL:HIDDEN in frame ers = yes.
 RECT-FRAME:HEIGHT-PIXELS in frame ers =
  FRAME ers:HEIGHT-PIXELS - RECT-FRAME:Y in frame ers - 2.
 RECT-FRAME:WIDTH-CHARS IN FRAME ers = FRAME ers:WIDTH-CHARS - .5.  /*GUI*/


		  /*POC ERS IS ON AND ERS OPTION IS ON*/
		  if new_po then po_ers_opt = poc_ers_opt.

		  /*UPDATE ERS FIELDS*/
		  display po_ers_opt po_pr_lst_tp with frame ers.
		  ers-loop:
		  do with frame ers on error undo, retry:
/*GUI*/ if global-beam-me-up then undo, leave.

		     set po_ers_opt po_pr_lst_tp.

		     /*VALIDATE ERS OPTION*/
		     if not ({gppoers.v po_ers_opt}) then do:
/*J1B1			/*ERS OPTION MUST BE BLANK 0 OR 1*/ */
/*J1B1			{mfmsg02.i 2303 3 "'Blank, 0 , or 1'"} */
/*J1B1*/		{mfmsg.i 2303 3}    /* INVALID ERS OPTION */
			next-prompt po_ers_opt.
			undo, retry ers-loop.
		     end.
		  end.
/*GUI*/ if global-beam-me-up then undo, leave.
 /*DO WITH FRAME ERS*/

		  hide frame ers.
	       end. /*AVAILABLE POC_CTRL*/
/*J0CV END OF ADD*/
/*J0HQ MOVED BELOW TWO LINES ABOVE PATCH J0CV
./*F727*/       if del-yn then next mainloop.
.               if continue = no then undo mainloop, retry.
.  *J0HQ*/
/*J0ZS* /*J053*/       if (oldcurr <> po_curr) then do:  */
/*J0ZS*/       if (oldcurr <> po_curr) or oldcurr = "" then do:
/*J053*/          /* SET CURRENCY DEPENDENT FORMATS */
/*J053*/          {pocurfmt.i}
/*J053*/          oldcurr = po_curr.
/*J053*/       end.

/*G735*/       if po_vend <> old_vend or po_ship <> old_ship then do:
/*G735*/          /* USE SHIP-TO INFO FOR TAX RATE PERCENTAGES */
/*G735*/          if po_tax_date <> ? then tax_date = po_tax_date.
/*G810*           else tax_date = due_date.                    */
/*G810*           if tax_date = ? then tax_date = po_ord_date. */
/*G810*/          else if po_due_date <> ? then tax_date = po_due_date.
/*G810*/          else                          tax_date = po_ord_date.

/*G735*/          if not {txnew.i} then do:
/*G735*/             {gprun.i ""gptax.p"" "(input ad_state,
					    input ad_county,
					    input ad_city,
					    input tax_date)"}
/*GUI*/ if global-beam-me-up then undo, leave.

/*G735*/             find tax_mstr where recid(tax_mstr) = tax_recno
/*G735*/             no-lock no-error.

/*G735*/             if available tax_mstr then
/*G735*/                assign
/*G735*/                po_tax_pct[1] = tax_tax_pct[1]
/*G735*/                po_tax_pct[2] = tax_tax_pct[2]
/*G735*/                po_tax_pct[3] = tax_tax_pct[3].

/*G735*/          end.
/*G735*/       end.

	       /* FIND LAST LINE */
	       line = 0.
	       find last pod_det no-lock
	       where pod_nbr = po_nbr
	       use-index pod_nbrln no-error.
	       if available pod_det then line = pod_line.

	       po_recno = recid(po_mstr).

	       /* IF BLANKET PO THEN BRING UP EXTRA SCREEN */
	       if blanket then do:
		  hide frame b no-pause.
		  {gprun.i ""poblmt1.p""}
/*GUI*/ if global-beam-me-up then undo, leave.

	       end.
/*GM74*/      do:   
	       hide frame a no-pause.
	       hide frame vend no-pause.
	       hide frame ship_to no-pause.
	       hide frame b no-pause.
/*GM74*/      end.   

	       /*COMMENTS */
	       assign
	       global_type = ""
	       global_lang = po_lang.
	       if pocmmts = yes then do:
		  assign
		  global_ref = po_vend
		  cmtindx = po_cmtindx.
		  {gprun.i ""gpcmmt01.p"" "(input ""po_mstr"")"}
/*GUI*/ if global-beam-me-up then undo, leave.

		  po_cmtindx = cmtindx.
	       end.
	    end.
/*GUI*/ if global-beam-me-up then undo, leave.

/*G117*/    due_date = po_due_date.

	    /* LINE ITEMS */
/*LB01*/    {gprun.i ""zzpopomta.p""}
/*GUI*/ if global-beam-me-up then undo, leave.


	    /*OVERIDE CANADIAN TAX DEFAULTS*/ /* NOT EXECUTED IF {txnew.i} */
	    if gl_can then do:
	       {gprun.i ""poctax.p""}
/*GUI*/ if global-beam-me-up then undo, leave.

	    end.

	    /* TRAILER */
	    hide all.
	    /*GUI: view frame dtitle. */
IF global-tool-bar AND global-tool-bar-handle <> ? THEN
  view global-tool-bar-handle. /*GUI*/

/*G674*/    view frame a.

/*LB01*/    {gprun.i ""zzpopomtf.p""}

/*GUI*/ if global-beam-me-up then undo, leave.


/*J044*/    /* IMPORT EXPORT UPDATE */
/*J044*/    if not batchrun and impexp then do:
/*J1CJ*/       run import-export-update.
/*J1CJ*        MOVED THE FOLLOWING TO A SEPARATE PROCEDURE
./*J044*/       impexp_edit = no.
./*J044*/       upd_okay = no.
./*J044*/       {mfmsg01.i 271 1 impexp_edit}
./*J044*/                               /* VIEW EDIT IMPORT EXPORT DATA ? */
./*J044*/       if impexp_edit then do:
./*J044*/          hide all.
./*J044*/          view frame dtitle.
./*J044*/          view frame a.
./*J044*/          {gprun.i ""iedmta.p"" "(input ""2"",
.					  input po_nbr,
.					  input-output upd_okay )" }
./*J044*/       end.
.*J1CJ*/
/*J044*/    end. /*IF NOT BATCHRUN AND IMPEXP */
/*J1CJ*/    if not impexp_edit then do:     /* CLEAN UP FRAMES DISPLAYED */
/*J1CJ*/        hide all no-pause.
/*J1CJ*/        /*GUI: view frame dtitle. */
IF global-tool-bar AND global-tool-bar-handle <> ? THEN
  view global-tool-bar-handle. /*GUI*/

/*J1CJ*/    end.

	    /* UPDATE OTHER DBs */
	    {gprun.i ""popomtg.p""}
/*GUI*/ if global-beam-me-up then undo, leave.

/*J1RQ*/    release po_mstr no-error.
	 end.
/*GUI*/ if global-beam-me-up then undo, leave.

	 status input.
	
/*J1CJ*  ADDED THE FOLLOWING PROCEDURES */
         PROCEDURE INITIALIZE-VARIABLES.
           	
            assign
                nontax_old         = nontaxable_amt:format in frame potot
                taxable_old        = taxable_amt:format
                lines_tot_old      = lines_total:format
                tax_tot_old        = tax_total:format
                order_amt_old      = order_amt:format
                line_tax_old       = line_tax:format in frame potrail
                line_tot_old       = line_total:format
                tax_old            = tax_2:format in frame pocttrl
                tax_amt_old        = tax_amt:format
                ord_amt_old        = ord_amt:format
                vtord_amt_old      = vtord_amt:format in frame povttrl
                line_pst_old       = line_pst:format
                prepaid_old        = po_prepaid:format in frame pomtd
                frt_old            = po_frt:format
                spec_chg_old       = po_spec_chg:format
                serv_chg_old       = po_serv_chg:format.
            oldcurr = "".

            do transaction on error undo, retry:
                /* SET UP PRICING BY LINE VALUES */
                find first mfc_ctrl where mfc_field = "poc_pc_line"
                    no-lock no-error.
                if available mfc_ctrl then
                    poc_pc_line = mfc_logical.
            end.
	
         END PROCEDURE.

         PROCEDURE INITIALIZE-PO-MSTR.
            assign
                  po_mstr.po_ers_opt = "1"
		  po_nbr = ponbr
		  po_ord_date = today
                  po_due_date = today
                  po_tax_date = ?
		  po_ship = poc_ctrl.poc_ship
		  po_bill = poc_bill
		  po_confirm = yes
                  disc = 0
		  po_user_id = global_userid
		  po_fst_id = poc_fst_id /*(GST exempt id for company)*/
		  po_pst_id = poc_pst_id.
            if recid(po_mstr) = -1 then .
            if blanket = true then
		 assign
		     po_blanket = ponbr
		     po_rel_nbr = 0
		     po_type = "B"
                     po_due_date = ?
		     po_eff_strt = today.
         END PROCEDURE.

         PROCEDURE IMPORT-EXPORT-UPDATE.
            assign
               impexp_edit = no
               upd_okay = no.
            {mfmsg01.i 271 1 impexp_edit}
                                  /* VIEW EDIT IMPORT EXPORT DATA ? */
            if impexp_edit then do:
                  hide all.
                  /*GUI: view frame dtitle. */
IF global-tool-bar AND global-tool-bar-handle <> ? THEN
  view global-tool-bar-handle. /*GUI*/

                  view frame a.
                  {gprun.i ""iedmta.p"" "(input ""2"",
					  input po_mstr.po_nbr,
					  input-output upd_okay )" }
/*GUI*/ if global-beam-me-up then undo, leave.

            end.

         END PROCEDURE.

/*J1CJ*  END ADDED PROCEDURES */
