
/* ss - 091221.1 by: jack */
     {mfdtitle.i "091223.1 "}
                             

/* ********** End Translatable Strings Definitions ********* */
     DEFINE VAR site LIKE si_site .
     DEFINE VAR site1 LIKE si_site .
     define  variable part        like pt_part .
     define  variable part1       like pt_part .
    DEFINE VAR due LIKE po_due_date .
    DEFINE VAR due1 LIKE po_due_date .
    DEFINE VAR v_end  AS DATE .  /* 记录结束日期*/
    DEFINE VAR v_start AS DATE  . /* 开始日期*/
    DEFINE VAR v_qty_oh AS DECIMAL FORMAT "->>,>>>,>>>,>>9.99<<<"  .
    DEFINE VAR v_logical AS LOGICAL .
    DEFINE VAR v_qty_so AS DECIMAL FORMAT "->>,>>>,>>>,>>9.99<<<" .
    DEFINE VAR v_qty_po  AS DECIMAL FORMAT "->>,>>>,>>>,>>9.99<<<" .
    DEFINE VAR v_qty_rcv AS DECIMAL FORMAT "->>,>>>,>>>,>>9.99<<<" .
    DEFINE VAR v_sfty_stk AS DECIMAL FORMAT "->>,>>>,>>>,>>9.99<<<" .
    DEFINE VAR v_desc1 LIKE pt_desc1 .
    
    /* ss - 091221.1 -b */
    DEFINE VAR vend LIKE vd_addr .
    DEFINE VAR vend1 LIKE vd_addr .
    DEFINE VAR buyer LIKE pt_buyer .
    DEFINE VAR buyer1 LIKE pt_buyer .
    /* ss - 091221.1 -e */


    /* 实际库存 */
    DEFINE TEMP-TABLE t1   
        FIELD t1_site LIKE si_site
        FIELD t1_part LIKE pt_part
        FIELD t1_due_date LIKE po_due_date
        FIELD t1_qty_oh LIKE ld_qty_oh
        .
    
    /* 计划需求 */
    DEFINE TEMP-TABLE t2
        FIELD t2_site LIKE si_site
        FIELD t2_part LIKE pt_part
        FIELD t2_due_date LIKE po_due_date
        FIELD t2_qty_ord LIKE sod_qty_ord
        .

    /*  订单计划*/
    DEFINE TEMP-TABLE t3
        FIELD t3_site LIKE si_site
        FIELD t3_part LIKE pt_part
        FIELD t3_due_date LIKE po_due_date
        FIELD t3_qty_ord LIKE sod_qty_ord 
        .

    DEFINE TEMP-TABLE xxld_det 
        FIELD xxld_part LIKE pt_part
        FIELD xxld_site LIKE si_site
        FIELD xxld_qty_oh AS DECIMAL FORMAT "->>,>>>,>>9.99<<<"
        FIELD xxld_qty_rcv AS DECIMAL FORMAT "->>,>>>,>>9.99<<<"
        FIELD xxld_due_date AS DATE
        FIELD xxld_wo AS LOGICAL INITIAL NO
        FIELD xxld_po AS LOGICAL INITIAL NO
        FIELD xxld_rcv AS LOGICAL INITIAL NO
        FIELD xxld_qty_ord AS DECIMAL FORMAT "->>,>>>,>>9.99<<<"
        FIELD xxld_qty_plan AS DECIMAL FORMAT "->>,>>>,>>9.99<<<"
        FIELD xxld_month AS INT
        FIELD xxld_buyer LIKE pt_buyer
        FIELD xxld_vend LIKE pt_vend
        INDEX xxld_part xxld_site xxld_part xxld_due_date
        INDEX xxld_month xxld_site xxld_part xxld_month 
        .

    DEFINE TEMP-TABLE t4 /* 行列转换*/
        FIELD  t4_part LIKE pt_part
        FIELD t4_desc LIKE pt_desc1
        FIELD t4_date  AS CHAR EXTENT 33  /* 存储天数 */
        FIELD t4_number AS INT 
        FIELD t4_name AS CHAR  EXTENT 6   /* 存储项目 */
        FIELD t4_plan AS DECIMAL FORMAT "->>,>>>,>>9.99<<<" EXTENT 33   /* 计划需求*/
        FIELD t4_ord  AS DECIMAL FORMAT "->>,>>>,>>9.99<<<" EXTENT 33    /* 订单计划*/
        FIELD t4_rcv AS DECIMAL FORMAT "->>,>>>,>>9.99<<<" EXTENT 33     /*  到货实际 */
        FIELD t4_qty AS DECIMAL FORMAT "->>,>>>,>>9.99<<<" EXTENT 33     /* 实际库存 */
        FIELD t4_comp1  AS DECIMAL FORMAT "->>,>>>,>>9.99<<<" EXTENT 33   /* 进度 */
        FIELD t4_comp2 AS DECIMAL FORMAT "->>,>>>,>>9.99<<<" EXTENT 33     /* 差异*/
            .
    DEFINE VAR i  AS INT . /* 存储天数*/


     form
       site            colon 22
       site1           label {t001.i} colon 49
       part            colon 22
       part1           label {t001.i} colon 49
       /* ss - 091221.1 -b */
      vend  COLON 22
      vend1  label {t001.i} colon 49
       buyer  COLON 22
       buyer1  label {t001.i} colon 49
      /* ss - 091221.1 -e */

       due            colon 22  VALIDATE (due <> ? , "日期不能为空" )
       due1            label {t001.i} colon 49  VALIDATE (due1 <> ? , "日期不能为空" )
      
     with frame a side-labels width 80 attr-space.

     /* SET EXTERNAL LABELS */
     setFrameLabels(frame a:handle).


/*K103*/ {wbrp01.i}
        repeat:
/*GN61      do on error undo, retry: */
           if site1 = hi_char then assign site1 = "".
           if part1 = hi_char then assign part1 = "".
            if vend1 = hi_char then assign vend1 = "".
             if buyer1 = hi_char then assign buyer1 = "".
           if due = low_date then assign due = ? .
           IF due1 = hi_date then assign due1 = ?.

/*K103*/ if c-application-mode <> 'web' then
              update site site1 part part1 vend vend1 buyer buyer1 due due1
           with frame a.

/*K103*/ {wbrp06.i &command = update &fields = "  site site1 part part1 vend vend1 buyer buyer1 due due1" &frm = "a"}

/*K103*/ if (c-application-mode <> 'web') or
/*K103*/ (c-application-mode = 'web' and
/*K103*/ (c-web-request begins 'data')) then do:

           assign bcdparm = "".
            {mfquoter.i site      }
           {mfquoter.i site1     }
           {mfquoter.i part      }
           {mfquoter.i part1     }
           {mfquoter.i vend      }
           {mfquoter.i vend1     }
           {mfquoter.i buyer      }
           {mfquoter.i buyer1     }
           {mfquoter.i due      }
           {mfquoter.i due1      }
          
          if site1 = "" then assign site1 = hi_char.
           if part1 = "" then assign part1 = hi_char.
           if vend1 = "" then assign vend1 = hi_char.
           if buyer1 = "" then assign buyer1 = hi_char.
          if due = ? then assign due = TODAY.
           IF due1 = ? THEN ASSIGN due1 = TODAY .
           hide message.

           /* ss - 091216.1 -b */
           IF due1 - due > 31  THEN DO:
               MESSAGE "时间范围不能超过31天"  VIEW-AS ALERT-BOX .
              UNDO ,RETRY .
           END.

           IF due1 > TODAY  THEN DO:
               MESSAGE "日期不能大于今天" VIEW-AS ALERT-BOX .
               UNDO ,RETRY .
           END.
           /* ss - 091216.1 -e */


/*K103*/ end.

          {mfselbpr.i "printer" 132}
        
            /* 处理逻辑 -b */

              FOR EACH t1:
                  DELETE t1 .

              END.

              FOR EACH t2:
                  DELETE t2 .
              END.

              FOR EACH t3:
                  DELETE t3 .
              END.

              FOR EACH xxld_det :
                  DELETE xxld_det .
              END.

              FOR EACH t4:
                  DELETE t4 .
              END.
              /* aa  处理实际库存 */
           
              FOR EACH pt_mstr  FIELD(pt_part pt_buyer pt_vend) NO-LOCK WHERE (pt_part >= part AND pt_part <= part1 ) AND (pt_buyer >= buyer AND pt_buyer <= buyer1)
                     AND (pt_vend >= vend AND pt_vend <= vend1),
               EACH  IN_mstr  FIELD( IN_site IN_part IN_qty_oh )  NO-LOCK WHERE (IN_site >= site AND IN_site <= site1) AND IN_part = pt_part :
                   
                   v_qty_oh = IN_qty_oh .
                 
                 
                  v_start = due1 .
                  DO WHILE v_start >= due :
                        FIND xxld_det WHERE xxld_site = IN_site AND xxld_part = IN_part AND xxld_due_date = v_start NO-LOCK NO-ERROR .
                     IF NOT AVAILABLE xxld_det THEN DO:
                   
                          FOR EACH tr_hist  FIELD (tr_site tr_part tr_effdate tr_ship_type tr_type tr_qty_loc ) NO-LOCK WHERE tr_part = IN_part AND tr_effdate > v_start   
                              AND tr_site = in_site AND tr_effdate <> ? AND tr_ship_type = ""   :
                               
                              IF tr_qty_loc = 0 and tr_type <> "CN-SHIP" and tr_type <> "CN-USE"  then
                                  next.
                                
                              v_qty_oh = v_qty_oh - tr_qty_loc .
                             
                          END.
                             
                         CREATE xxld_det .
                         ASSIGN
                             xxld_site = IN_site
                             xxld_part = IN_part
                             xxld_qty_oh = v_qty_oh 
                             xxld_due_date = v_start
                             xxld_month = MONTH(v_start)
                             .
                       
                     END. /* not available xxld_det */
                    
                     v_qty_oh = IN_qty_oh .
                     v_start  = v_start  - 1 .
                     v_logical = NO .
                  END.   /* v_end <= due1  */

             END.  /*初始化日期 */


             /* aa  处理实际库存 */
             
                 
             /*处理计划需求 */
             v_start = due1 .
             DO WHILE   v_start >= due :
          
                      FOR EACH wo_mstr    FIELD (wo_site wo_due_date )  NO-LOCK WHERE  wo_due_date = v_start AND   ( wo_site >= site AND wo_site <= site1)  AND wo_status <> "p"
                         ,  EACH wod_det  FIELD (wod_nbr wod_part wod_qty_req)   NO-LOCK WHERE wod_lot = wo_lot  AND (wod_part >= part AND wod_part <= part1) 
                          , EACH pt_mstr  FIELD(pt_part pt_buyer pt_vend)  NO-LOCK WHERE (pt_part = wod_part ) AND (pt_vend >= vend AND pt_vend <= vend1) :
                          
                          FIND FIRST xxld_det WHERE xxld_site = wo_site AND xxld_part = wod_part AND xxld_due_date = wo_due_date  NO-LOCK NO-ERROR .
                          IF  AVAILABLE xxld_det THEN DO:
                                  IF xxld_wo = NO THEN DO:
                                     CREATE t2 .
                                     ASSIGN
                                         t2_site = wo_site
                                         t2_part = wod_part
                                         t2_due_date = wo_due_date
                                         t2_qty_ord = wod_qty_req 
                                         .
                                  END.     /* 没有计算过wo需求，则按零件一次计算更新*/

                                
                          END.

                      
                     END.            /* each wo_mstr  */

                     /* 更新xxld wo 资料*/
                     FOR EACH t2 NO-LOCK  WHERE t2_due_date = v_start BREAK BY t2_site BY t2_part :
                         
                         ACCUMULATE t2_qty_ord (TOTAL BY t2_part) .
                         
                         IF LAST-OF(t2_part ) THEN DO:
                             
                             /* ss - 091216.1 -b
                             v_qty_so = 0 .
                            
                             /* 计算半成品等so需求*/
                             FOR EACH sod_det  FIELD (sod_site sod_part sod_due_date sod_qty_ord)  WHERE sod_site = t2_site AND  sod_part = t2_part AND sod_due_date = t2_due_date NO-LOCK:
                                v_qty_so = v_qty_so + sod_qty_ord  .
                            END.
                             /* 计算半成品等so需求*/
                             ss - 091216.1 -e */

                             FIND FIRST xxld_det WHERE xxld_site = t2_site AND xxld_part = t2_part AND xxld_due_date = t2_due_date NO-ERROR .
                             IF AVAILABLE xxld_det THEN DO:
                                ASSIGN
                                    xxld_qty_plan = xxld_qty_plan +  ACCUMULATE TOTAL BY t2_part t2_qty_ord 
                                    xxld_wo = YES .
                             END.

                            
                         END.  /* last-of  */

                     END.
                      /* 更新xxld wo 资料*/
                     v_start = v_start - 1 .
             
             END.  /* do while */
             /*处理计划需求 */

             /*  处理贸易件so 需求 */
             v_start = due1 .
             DO WHILE v_start >= due :
                   
                    v_qty_so = 0 .
                            
                     /* 计算半成品等so需求*/

                    FOR EACH xxld_det WHERE xxld_due_date = v_start :
     
                         FOR EACH sod_det  FIELD (sod_site sod_part sod_due_date sod_qty_ord)  WHERE sod_site = xxld_site AND  sod_part = xxld_part AND sod_due_date = xxld_due_date  NO-LOCK:
                            v_qty_so = v_qty_so + sod_qty_ord  .
                        END.

                            ASSIGN
                                xxld_qty_plan = xxld_qty_plan +  v_qty_so .
                               
                    END.

                    v_qty_so = 0 .
                    v_start = v_start - 1 .

                     /* 计算半成品等so需求*/
             END.

             /*  处理贸易件so 需求 */
             

                   /* 订单计划,实际到货*/
             v_start = due1 .
             DO WHILE v_start >= due :
                 
                 FOR EACH xxld_det WHERE   xxld_due_date = v_start AND (xxld_po = NO OR xxld_rcv = NO ) :
                     
                     /* 计算订单需求*/
                     IF xxld_po = NO  THEN DO:
                               
                          /* 订单计划 */
                             v_qty_po = 0 .
                                 FOR EACH pod_det FIELD ( pod_site pod_part pod_due_date pod_qty_ord )  WHERE  pod_site = xxld_site AND pod_part = xxld_part AND pod_due_date = xxld_due_date NO-LOCK :
                                  
                                       v_qty_po = v_qty_po  + pod_qty_ord   .
                                  
                                 END.

                                ASSIGN
                                    xxld_qty_ord = xxld_qty_ord + v_qty_po 
                                    xxld_po = YES.

                              /* 订单计划 */
                             v_qty_po = 0 .

                     END.

                     /* 计算实际到货*/
                     IF xxld_rcv = NO  THEN DO:
                     
                     v_qty_rcv = 0 .
                     
                     FOR EACH prh_hist  field(prh_site prh_part prh_rcp_date prh_rcvd) WHERE prh_site = xxld_site AND  prh_part = xxld_part AND prh_rcp_date = xxld_due_date NO-LOCK :
                         v_qty_rcv = v_qty_rcv + prh_rcvd .
                     END.
                     
                     ASSIGN
                         xxld_qty_rcv = xxld_qty_rcv + v_qty_rcv
                         xxld_rcv = YES .
                     
                     v_qty_rcv = 0 .
                     
                     END.
                     /* 计算实际到货*/

                  END.

                  v_start  = v_start - 1 .

             END.
                /* 订单计划,实际到货*/

             
        /* 处理逻辑 -e */

      
PUT UNFORMATTED "#def REPORTPATH=$/QAD Addons/BI Report/" + SUBSTRING(execname,1,LENGTH(execname) - 2) SKIP.
PUT UNFORMATTED "#def :end" SKIP.

        /*     EXPORT DELIMITER ";" "零件" "名称"  "计划需求"  "实绩库存"  "订单计划"  "到货时绩" "进度"  "差异" "日期"  .
	    */
     FOR EACH xxld_det  NO-LOCK USE-INDEX xxld_part  WHERE (xxld_site >= site AND xxld_site <= site1) AND ( xxld_part >= part AND xxld_part <= part1 ) AND (xxld_due_date >= due AND xxld_due_date <= due1)  BREAK  BY xxld_part  BY xxld_due_date :
                 

                IF FIRST-OF(xxld_part)  THEN DO: 

                     FIND FIRST pt_mstr WHERE pt_part = xxld_part NO-LOCK NO-ERROR .
                     IF AVAILABLE pt_mstr  THEN 
                       ASSIGN
                           v_desc1 = pt_desc1 
                           v_sfty_stk = pt_sfty_stk.
                         
                     ELSE  
                         ASSIGN v_desc1 = "" 
                                       v_sfty_stk = 0 .

                         /* ss - 091216.1 -b  行列转换 */
                         CREATE t4 .
                         ASSIGN
                             t4_part = pt_part
                             t4_desc = v_desc1 
                             .
                           
                         i = 0 .
                         /* ss - 091216.1 -e */
                 END.

                 i = i + 1 .

                 ACCUMULATE xxld_qty_plan ( TOTAL BY xxld_part) .
                 ACCUMULATE xxld_qty_oh ( TOTAL BY xxld_part) .
                 ACCUMULATE xxld_qty_ord ( TOTAL BY xxld_part) .
                  ACCUMULATE xxld_qty_rcv ( TOTAL BY xxld_part) .
                  ACCUMULATE ( xxld_qty_rcv - xxld_qty_ord ) ( TOTAL BY xxld_part) .
                  ACCUMULATE ( xxld_qty_oh - v_sfty_stk ) ( TOTAL BY xxld_part) .
                 
                  /* ss - 091216.1 -b  行列转换 */
                   FIND FIRST t4 WHERE t4_part = xxld_part NO-ERROR .
                         IF AVAILABLE t4  THEN
                 
                   ASSIGN
                       t4_plan[i] =xxld_qty_plan
                       t4_qty[i] = xxld_qty_oh
                       t4_rcv[i] = xxld_qty_rcv
                       t4_ord[i] = xxld_qty_ord
                       t4_comp1[i] = xxld_qty_rcv - xxld_qty_ord
                       t4_comp2[i] = xxld_qty_oh - v_sfty_stk
                       t4_date[i] = STRING(MONTH(xxld_due_date)) + "/" +  string(DAY(xxld_due_date))
                       .
                   /* ss - 091216.1 -e */
              
                   /*
                  EXPORT DELIMITER ";"  xxld_part v_desc1 xxld_qty_plan xxld_qty_oh xxld_qty_ord xxld_qty_rcv ( xxld_qty_rcv - xxld_qty_ord ) LABEL "进度"   ( xxld_qty_oh - v_sfty_stk)  LABEL   "差异" xxld_due_date   .
                   */
                  
                     IF LAST-OF(xxld_part) THEN DO:
                      /*   
                         EXPORT DELIMITER ";"  "小计" FORMAT "x(18)"  v_desc1 ( ACCUMULATE TOTAL BY xxld_part xxld_qty_plan ) ( ACCUMULATE TOTAL BY xxld_part xxld_qty_oh )  ( ACCUMULATE TOTAL BY xxld_part xxld_qty_ord )
                             
                             ( ACCUMULATE TOTAL BY xxld_part xxld_qty_rcv )   ( ACCUMULATE TOTAL BY xxld_part (xxld_qty_rcv - xxld_qty_ord)  )   label "进度" ( ACCUMULATE TOTAL BY xxld_part (xxld_qty_oh - v_sfty_stk)  ) label "差异" xxld_due_date  .
                      */

                         /* ss - 091216.1 -b */
                         i = i + 1 .
                         FIND FIRST t4 WHERE t4_part = xxld_part NO-ERROR .
                         IF AVAILABLE t4  THEN
                            ASSIGN
                                       t4_plan[i] = ACCUMULATE TOTAL BY xxld_part xxld_qty_plan
                                       t4_qty[i] =  ACCUMULATE TOTAL BY xxld_part xxld_qty_oh
                                       t4_rcv[i] = ACCUMULATE TOTAL BY xxld_part xxld_qty_rcv
                                       t4_ord[i] = ACCUMULATE TOTAL BY xxld_part xxld_qty_ord
                                       t4_comp1[i] = ACCUMULATE TOTAL BY xxld_part (xxld_qty_rcv - xxld_qty_ord) 
                                       t4_comp2[i] = ACCUMULATE TOTAL BY xxld_part (xxld_qty_oh - v_sfty_stk) 
                                       t4_date[i] = "合计"
                                       t4_number = i 
                                       .
                         /* ss - 091216.1 -e */
                     END.


         END.

      
                /* ss - 091216.1 -b */
                FOR EACH t4 NO-LOCK :
                      
                    /*  输出日期 */
                     PUT  "图号" ";" "名称" ";" "日程" .
                      i = 1 .
                       DO WHILE i <= t4_number :
                           PUT ";"  t4_date[i]  .
                           i = i + 1 .
                       END.
                      PUT SKIP .
                       /*  输出日期 */
                    
                     

                       /*  输出计划需求 */
                     PUT  t4_part  ";"  t4_desc ";" "计划需求" .
                      i = 1 .
                       DO WHILE i <= t4_number :
                           PUT ";"  t4_plan[i]  .
                             i = i + 1 .
                       END.
                         PUT SKIP .
                      /*  输出计划需求 */

                
                          /*  输出实际库存 */
                     PUT  t4_part  ";"  t4_desc ";" "实绩库存" .
                      i = 1 .
                       DO WHILE i <= t4_number :
                           PUT ";"  t4_qty[i]  .
                             i = i + 1 .
                       END.
                         PUT SKIP .
                         /*  输出实际库存 */

                             /*  输出订单计划 */
                     PUT  t4_part  ";"  t4_desc ";" "订单计划" .
                      i = 1 .
                       DO WHILE i <= t4_number :
                           PUT ";"  t4_ord[i]  .
                             i = i + 1 .
                       END.
                         PUT SKIP .
                         /*  输出订单计划 */

                           /*  输出到货实际 */
                     PUT  t4_part  ";"  t4_desc ";" "到货实绩" .
                      i = 1 .
                       DO WHILE i <= t4_number :
                           PUT ";"  t4_rcv[i]  .
                             i = i + 1 .
                       END.
                         PUT SKIP .
                          /*  输出到货实际 */

                          /*  输出进度 */
                     PUT  t4_part  ";"  t4_desc ";" "进度" .
                      i = 1 .
                       DO WHILE i <= t4_number :
                           PUT ";"  t4_comp1[i]  .
                             i = i + 1 .
                       END.
                         PUT SKIP .
                           /*  输出进度 */

                           /*  输出差异 */
                     PUT  t4_part  ";"  t4_desc ";" "差异" .
                      i = 1 .
                       DO WHILE i <= t4_number :
                           PUT ";"  t4_comp2[i]  .
                             i = i + 1 .
                       END.
                         PUT SKIP .
                          /*  输出差异 */


                {mfrpchk.i}

                   END.

                /* ss - 091216.1 -e */
	
           {mfreset.i}
/*GN61      end. */
     end.

/*K103*/ {wbrp04.i &frame-spec = a}
